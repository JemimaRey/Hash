/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ED;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jemima
 */
public class FrameHash extends javax.swing.JFrame {

    /**
     * Creates new form FrameHash
     */
    boolean flagMod, flagDDH, flagCuadrado, flagTruncamiento = false;
    Arreglo array;
    DefaultTableModel dtm = new DefaultTableModel();

    public FrameHash() {
        initComponents();

        String[] titulos = {"N°", "valor"};
        this.dtm.setColumnIdentifiers(titulos);
        this.tabla.setModel(dtm);
        tabla.setSelectionBackground(Color.GREEN);

    }

    public void setArray(boolean flagmod, boolean flagddh, boolean flagcuadrado, boolean flagtruncamiento) {
        this.array = new Arreglo(flagmod, flagddh, flagcuadrado, flagtruncamiento);
        this.refrescar();
    }

    public void vaciarTabla() {
        for (int x = 0; x < this.array.arreglo.length; x++) {
            if (this.dtm.getRowCount() > 0) {
                this.dtm.removeRow(0);
            }
        }

    }

    public final void refrescar() {

        for (int x = 0; x < this.array.arreglo.length; x++) {
            String[] datos = new String[2];
            datos[0] = x + "";
            datos[1] = this.array.arreglo[x];
            this.dtm.addRow(datos);
        }
    }

    public void seleccionarFila(int posicion) {
        if (posicion >= 0 && posicion < this.array.arreglo.length) {
            this.tabla.setRowSelectionInterval(posicion, posicion);
            JOptionPane.showMessageDialog(null, "Elemento encontrado en la posición "+posicion);
        }else{
        JOptionPane.showMessageDialog(null, "No se encontró el elemento");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnBuscar)
                    .addComponent(btnEliminar)
                    .addComponent(btnSalir))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int valor_int;
        String valor;
        out:
        do {
            do {
                valor = JOptionPane.showInputDialog("Ingresa un numero del 1111 - 9999");
                if (valor == null) {
                    break out;
                }
                if (valor.equals("")) {
                    JOptionPane.showMessageDialog(null, "Ingrese una cantidad válida", "ERROR", JOptionPane.WARNING_MESSAGE);
                }
            } while (!(valor.matches("[+-]?\\d*(\\.\\d+)?")));
            valor_int = Integer.valueOf(valor);
        } while (!(valor_int >= 1111 && valor_int <= 9999));
        
        this.array.guardarElemento(valor);
        this.vaciarTabla();
        this.refrescar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        int valor_int, posicion;
        String valor;
        out:
        do {
            do {
                valor = JOptionPane.showInputDialog("Ingresa un numero del 1111 - 9999");
                if (valor == null) {
                    break out;
                }
                if (valor.equals("")) {
                    JOptionPane.showMessageDialog(null, "Ingrese una cantidad válida", "ERROR", JOptionPane.WARNING_MESSAGE);
                }
            } while (!(valor.matches("[+-]?\\d*(\\.\\d+)?")));
            valor_int = Integer.valueOf(valor);
        } while (!(valor_int >= 1111 && valor_int <= 9999));

        posicion = this.array.buscar(valor);
        this.seleccionarFila(posicion);

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int valor_int, posicion;
        String valor;
        out:
        do {
            do {
                valor = JOptionPane.showInputDialog("Ingresa un numero del 1111 - 9999");
                if (valor == null) {
                    break out;
                }
                if (valor.equals("")) {
                    JOptionPane.showMessageDialog(null, "Ingrese una cantidad válida", "ERROR", JOptionPane.WARNING_MESSAGE);
                }
            } while (!(valor.matches("[+-]?\\d*(\\.\\d+)?")));
            valor_int = Integer.valueOf(valor);
        } while (!(valor_int >= 1111 && valor_int <= 9999));

        this.array.eliminar(valor);
        this.vaciarTabla();
        this.refrescar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "¿Está seguro que quiere salir?", "SALIR", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameHash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameHash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
